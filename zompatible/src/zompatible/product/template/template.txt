================
PRODUCT TEMPLATE (was categorynew)
================
A product template is a virtual product, with all the needed characteristic interfaces,
 with empty values, and a set of default categories.
A product created from the template will get the same characteristics and categories.

    >>> from zompatible.product.template.template import ProductTemplate
    >>> printer_template = ProductTemplate(u'Printer')

We add characteristics on our template::

    >>> from zompatible.characteristic.characteristic import Characteristic
    >>> from zompatible.characteristic.interfaces import ICharacteristics
    >>> reso = Characteristic(name=u'Resolution', value=(None, None), unit=(u'dpi',u'dpi'))
    >>> ppm = Characteristic(name=u'Printing speed (A4 photo)', value=None, unit=u'ppm')
    >>> ICharacteristics(printer_template).characteristics = [reso, ppm]


We add categories to our templates::

(...)

The template can act as a product factory to create new products::

    >>> printer = printer_template.create_product()
    Traceback (most recent call last):
    TypeError: create_product() takes exactly 2 arguments (1 given)

Oops, we forgot the name::

    >>> printer = printer_template.create_product(name=u'Foopson Photobar 4')
    >>> printer.name
    u'Foopson Photobar 4'
