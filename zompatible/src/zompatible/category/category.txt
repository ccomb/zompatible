==========
CATEGORIES
==========

A category is just an object with a name defining the category::

    >>> from zompatible.category.category import Category
    >>> category = Category(u'printer')
    >>> category.name
    u'printer'

ANY object can be categorized, which means we can store an retrieve categories from it.
The job is done by an adapter from ICategorizable to ICategories.
So we must first register the adapter, then try to use categories::

    >>> from zompatible.category.interfaces import ICategorizable, ICategories
    >>> from zompatible.category.category import Categories
    >>> from zope.component import provideAdapter
    >>> provideAdapter(Categories, provides=ICategories)

    >>> class MyObject(object):
    ...     pass
    >>> myobj = MyObject()
    >>> ICategories(myobj)
    Traceback (most recent call last):
    ...
    TypeError: ('Could not adapt', <MyObject object at ...>, <InterfaceClass zompatible.category.interfaces.ICategories>)

Oops, we forgot to tell our object should be categorizable.
We must also register the annotation adapter.
By beeing categorizable, our object becomes annotatable

    >>> from zope.annotation.attribute import AttributeAnnotations
    >>> from zope.annotation.interfaces import IAttributeAnnotatable, IAnnotations, IAnnotatable
    >>> provideAdapter(AttributeAnnotations, provides=IAnnotations)
    >>> IAnnotatable.providedBy(myobj) or IAttributeAnnotatable.providedBy(myobj)
    False
    >>> from zope.interface import alsoProvides
    >>> alsoProvides(myobj, ICategorizable)
    >>> IAnnotatable.providedBy(myobj) and IAttributeAnnotatable.providedBy(myobj)
    True

Now we can access the categories of the object::

    >>> ICategories(myobj)
    <zompatible.category.category.Categories object at ...>
    >>> categories = ICategories(myobj).categories
    >>> list(categories)
    []

We can add a category::

    >>> categories.append(category)
    >>> [cat.name for cat in ICategories(myobj).categories]
    [u'printer']

